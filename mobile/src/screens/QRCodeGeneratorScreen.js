import React, { useState } from 'react';
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  SafeAreaView,
  ScrollView,
  Alert,
  Share,
} from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import QRCode from 'react-native-qrcode-svg';

const QRCodeGeneratorScreen = ({ navigation }) => {
  const [selectedBatch, setSelectedBatch] = useState(null);
  const [qrValue, setQrValue] = useState('');

  // Mock batches data
  const batches = [
    { id: '1', batchId: 'BATCH-001', crop: 'Organic Tomatoes', status: 'Ready' },
    { id: '2', batchId: 'BATCH-002', crop: 'Fresh Lettuce', status: 'Ready' },
    { id: '3', batchId: 'BATCH-003', crop: 'Organic Carrots', status: 'Processing' },
    { id: '4', batchId: 'BATCH-004', crop: 'Premium Onions', status: 'Ready' },
  ];

  const handleBatchSelect = (batch) => {
    setSelectedBatch(batch);
    setQrValue(batch.batchId);
  };

  const generateQRCode = () => {
    if (!selectedBatch) {
      Alert.alert('Error', 'Please select a batch first');
      return;
    }
    // QR code is automatically generated when qrValue changes
    Alert.alert('Success', 'QR Code generated successfully!');
  };

  const shareQRCode = () => {
    if (!selectedBatch) {
      Alert.alert('Error', 'No QR code to share');
      return;
    }

    Share.share({
      message: `Batch ID: ${selectedBatch.batchId}\nCrop: ${selectedBatch.crop}\nGenerated by Food Trust App`,
      title: 'QR Code Data',
    });
  };

  const downloadQRCode = () => {
    if (!selectedBatch) {
      Alert.alert('Error', 'No QR code to download');
      return;
    }

    Alert.alert(
      'Download QR Code',
      'QR code will be saved to your device',
      [
        { text: 'Cancel', style: 'cancel' },
        { text: 'Download', onPress: () => {
          // In a real app, this would save the QR code image
          Alert.alert('Success', 'QR Code downloaded successfully!');
        }}
      ]
    );
  };

  return (
    <SafeAreaView style={styles.container}>
      {/* Header */}
      <View style={styles.header}>
        <TouchableOpacity
          style={styles.backButton}
          onPress={() => navigation.goBack()}
        >
          <Ionicons name="arrow-back" size={24} color="#FFFFFF" />
        </TouchableOpacity>
        <Text style={styles.headerTitle}>Generate QR Code</Text>
        <View style={styles.placeholder} />
      </View>

      <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>
        {/* Batch Selection */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Select Batch</Text>
          <View style={styles.batchList}>
            {batches.map((batch) => (
              <TouchableOpacity
                key={batch.id}
                style={[
                  styles.batchItem,
                  selectedBatch?.id === batch.id && styles.selectedBatchItem
                ]}
                onPress={() => handleBatchSelect(batch)}
              >
                <View style={styles.batchInfo}>
                  <Text style={styles.batchId}>{batch.batchId}</Text>
                  <Text style={styles.cropName}>{batch.crop}</Text>
                </View>
                <View style={styles.batchStatus}>
                  <View style={[
                    styles.statusBadge,
                    { backgroundColor: batch.status === 'Ready' ? '#10B981' : '#F59E0B' }
                  ]}>
                    <Text style={styles.statusText}>{batch.status}</Text>
                  </View>
                  {selectedBatch?.id === batch.id && (
                    <Ionicons name="checkmark-circle" size={20} color="#10B981" />
                  )}
                </View>
              </TouchableOpacity>
            ))}
          </View>
        </View>

        {/* QR Code Display */}
        {selectedBatch && (
          <View style={styles.section}>
            <Text style={styles.sectionTitle}>Generated QR Code</Text>
            <View style={styles.qrContainer}>
              <View style={styles.qrCodeWrapper}>
                <QRCode
                  value={qrValue}
                  size={200}
                  color="#000000"
                  backgroundColor="#FFFFFF"
                />
              </View>
              <Text style={styles.qrLabel}>Batch ID: {selectedBatch.batchId}</Text>
              <Text style={styles.qrSubLabel}>{selectedBatch.crop}</Text>
            </View>

            {/* Action Buttons */}
            <View style={styles.actionButtons}>
              <TouchableOpacity
                style={[styles.actionButton, styles.primaryButton]}
                onPress={generateQRCode}
              >
                <Ionicons name="refresh" size={20} color="#FFFFFF" />
                <Text style={styles.primaryButtonText}>Regenerate</Text>
              </TouchableOpacity>

              <TouchableOpacity
                style={[styles.actionButton, styles.secondaryButton]}
                onPress={shareQRCode}
              >
                <Ionicons name="share-outline" size={20} color="#10B981" />
                <Text style={styles.secondaryButtonText}>Share</Text>
              </TouchableOpacity>

              <TouchableOpacity
                style={[styles.actionButton, styles.secondaryButton]}
                onPress={downloadQRCode}
              >
                <Ionicons name="download-outline" size={20} color="#10B981" />
                <Text style={styles.secondaryButtonText}>Download</Text>
              </TouchableOpacity>
            </View>
          </View>
        )}

        {/* QR Code Information */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>QR Code Information</Text>
          <View style={styles.infoContainer}>
            <View style={styles.infoItem}>
              <Ionicons name="information-circle-outline" size={20} color="#6B7280" />
              <Text style={styles.infoText}>
                This QR code contains the batch ID and can be scanned by any stakeholder in the supply chain.
              </Text>
            </View>
            <View style={styles.infoItem}>
              <Ionicons name="shield-checkmark-outline" size={20} color="#6B7280" />
              <Text style={styles.infoText}>
                The QR code is linked to the blockchain for secure and tamper-proof tracking.
              </Text>
            </View>
            <View style={styles.infoItem}>
              <Ionicons name="time-outline" size={20} color="#6B7280" />
              <Text style={styles.infoText}>
                Generated QR codes remain valid throughout the entire supply chain journey.
              </Text>
            </View>
          </View>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F9FAFB',
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 20,
    paddingVertical: 16,
    backgroundColor: '#10B981',
  },
  backButton: {
    padding: 8,
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: '#FFFFFF',
  },
  placeholder: {
    width: 40,
  },
  content: {
    flex: 1,
    padding: 20,
  },
  section: {
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
    padding: 20,
    marginBottom: 20,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: 3.84,
    elevation: 5,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: '#1F2937',
    marginBottom: 16,
  },
  batchList: {
    gap: 12,
  },
  batchItem: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    padding: 16,
    borderWidth: 1,
    borderColor: '#E5E7EB',
    borderRadius: 8,
    backgroundColor: '#F9FAFB',
  },
  selectedBatchItem: {
    borderColor: '#10B981',
    backgroundColor: '#F0FDF4',
  },
  batchInfo: {
    flex: 1,
  },
  batchId: {
    fontSize: 16,
    fontWeight: '600',
    color: '#1F2937',
  },
  cropName: {
    fontSize: 14,
    color: '#6B7280',
    marginTop: 2,
  },
  batchStatus: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 8,
  },
  statusBadge: {
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 12,
  },
  statusText: {
    fontSize: 12,
    fontWeight: '600',
    color: '#FFFFFF',
  },
  qrContainer: {
    alignItems: 'center',
    paddingVertical: 20,
  },
  qrCodeWrapper: {
    padding: 20,
    backgroundColor: '#FFFFFF',
    borderRadius: 12,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: 3.84,
    elevation: 5,
  },
  qrLabel: {
    fontSize: 16,
    fontWeight: '600',
    color: '#1F2937',
    marginTop: 16,
  },
  qrSubLabel: {
    fontSize: 14,
    color: '#6B7280',
    marginTop: 4,
  },
  actionButtons: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    marginTop: 20,
  },
  actionButton: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 16,
    paddingVertical: 12,
    borderRadius: 8,
    minWidth: 100,
    justifyContent: 'center',
  },
  primaryButton: {
    backgroundColor: '#10B981',
  },
  primaryButtonText: {
    color: '#FFFFFF',
    fontSize: 14,
    fontWeight: '600',
    marginLeft: 4,
  },
  secondaryButton: {
    backgroundColor: '#F0FDF4',
    borderWidth: 1,
    borderColor: '#10B981',
  },
  secondaryButtonText: {
    color: '#10B981',
    fontSize: 14,
    fontWeight: '600',
    marginLeft: 4,
  },
  infoContainer: {
    gap: 12,
  },
  infoItem: {
    flexDirection: 'row',
    alignItems: 'flex-start',
  },
  infoText: {
    flex: 1,
    fontSize: 14,
    color: '#6B7280',
    marginLeft: 12,
    lineHeight: 20,
  },
});

export default QRCodeGeneratorScreen;
